{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/app/providers.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { SessionProvider } from \"next-auth/react\";\r\nimport { ReactNode } from \"react\";\r\n\r\nexport default function Providers({ children }: { children: ReactNode }) {\r\n  return <SessionProvider>{children}</SessionProvider>;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAKe,SAAS,UAAU,EAAE,QAAQ,EAA2B;IACrE,qBAAO,8OAAC,iKAAe;kBAAE;;;;;;AAC3B","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/context/DarkModeProvider.tsx"],"sourcesContent":["\"use client\";\r\nimport { createContext, useContext, useState } from \"react\";\r\n\r\ntype DarkModeContextType = {\r\n  darkMode: boolean;\r\n  toggleDarkMode: () => void;\r\n};\r\n\r\nconst DarkModeContext = createContext<DarkModeContextType | undefined>(undefined);\r\n\r\nexport const DarkModeProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const toggleDarkMode = () => setDarkMode((prev) => !prev);\r\n\r\n  return (\r\n    <DarkModeContext.Provider value={{ darkMode, toggleDarkMode }}>\r\n      {children}\r\n    </DarkModeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDarkMode = () => {\r\n  const ctx = useContext(DarkModeContext);\r\n  if (!ctx) throw new Error(\"useDarkMode must be used within DarkModeProvider\");\r\n  return ctx;\r\n};\r\n"],"names":[],"mappings":";;;;;;;AACA;AADA;;;AAQA,MAAM,gCAAkB,IAAA,sNAAa,EAAkC;AAEhE,MAAM,mBAAmB,CAAC,EAAE,QAAQ,EAAiC;IAC1E,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IAEzC,MAAM,iBAAiB,IAAM,YAAY,CAAC,OAAS,CAAC;IAEpD,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;YAAU;QAAe;kBACzD;;;;;;AAGP;AAEO,MAAM,cAAc;IACzB,MAAM,MAAM,IAAA,mNAAU,EAAC;IACvB,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM;IAC1B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/components/DarkModeToggle/DarkModeToggle.tsx"],"sourcesContent":["\"use client\";\r\nimport { useDarkMode } from \"@/context/DarkModeProvider\";\r\n\r\nexport default function DarkModeToggle() {\r\n  const { darkMode, toggleDarkMode } = useDarkMode();\r\n\r\n  return (\r\n    <div\r\n      onClick={toggleDarkMode}\r\n      className={`relative w-14 h-7 flex items-center rounded-full p-1 cursor-pointer transition-colors duration-300 ${\r\n        darkMode ? \"bg-gray-600\" : \"bg-yellow-300\"\r\n      }`}\r\n    >\r\n      {/* Sun icon (left) */}\r\n      <span className=\"absolute left-1 text-sm\">ðŸŒž</span>\r\n      {/* Moon icon (right) */}\r\n      <span className=\"absolute right-1 text-sm\">ðŸŒ™</span>\r\n\r\n      {/* Slider knob */}\r\n      <div\r\n        className={`bg-white w-5 h-5 rounded-full shadow-md transform transition-transform duration-300 ${\r\n          darkMode ? \"translate-x-7\" : \"translate-x-0\"\r\n        }`}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAGe,SAAS;IACtB,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,GAAG,IAAA,kJAAW;IAEhD,qBACE,8OAAC;QACC,SAAS;QACT,WAAW,CAAC,mGAAmG,EAC7G,WAAW,gBAAgB,iBAC3B;;0BAGF,8OAAC;gBAAK,WAAU;0BAA0B;;;;;;0BAE1C,8OAAC;gBAAK,WAAU;0BAA2B;;;;;;0BAG3C,8OAAC;gBACC,WAAW,CAAC,oFAAoF,EAC9F,WAAW,kBAAkB,iBAC7B;;;;;;;;;;;;AAIV","debugId":null}}]
}