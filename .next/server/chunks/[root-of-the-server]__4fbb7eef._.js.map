{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/env0-lite-frontend/env0-lite-frontend/src/lib/session.ts"],"sourcesContent":["import { User, getServerSession } from 'next-auth'\r\n\r\nexport const session = async ({ session, token }: any) => {\r\n  session.user.id = token.id\r\n  return session\r\n}\r\n\r\nexport const getUserSession = async (): Promise<User> => {\r\n  const authUserSession = await getServerSession({\r\n    callbacks: {\r\n      session,\r\n    },\r\n  })\r\n  // if (!authUserSession) throw new Error('unauthorized')\r\n  return authUserSession?.user\r\n}"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,UAAU,OAAO,EAAE,OAAO,EAAE,KAAK,EAAO;IACnD,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;IAC1B,OAAO;AACT;AAEO,MAAM,iBAAiB;IAC5B,MAAM,kBAAkB,MAAM,IAAA,2JAAgB,EAAC;QAC7C,WAAW;YACT;QACF;IACF;IACA,wDAAwD;IACxD,OAAO,iBAAiB;AAC1B","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/env0-lite-frontend/env0-lite-frontend/src/config/api-endpoints.ts"],"sourcesContent":["const apiEndpoints = {\r\n    auth : {\r\n        signUp: \"/api/users/signup\",\r\n        login: \"/api/users/login\",\r\n        byEmail: \"/api/users/email\"\r\n    },\r\n    github: {\r\n        getRepo: \"/api/github-pat/repos/:email\",\r\n        getTree: \"/api/github-pat/repos\"\r\n    }\r\n}\r\n\r\nexport {apiEndpoints}"],"names":[],"mappings":";;;;AAAA,MAAM,eAAe;IACjB,MAAO;QACH,QAAQ;QACR,OAAO;QACP,SAAS;IACb;IACA,QAAQ;QACJ,SAAS;QACT,SAAS;IACb;AACJ","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/env0-lite-frontend/env0-lite-frontend/src/config/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosPrivate = axios.create({\r\n    baseURL: \"http://localhost:5000\",\r\n    withCredentials: true,\r\n});\r\n\r\nexport default axiosPrivate;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,eAAe,kJAAK,CAAC,MAAM,CAAC;IAC9B,SAAS;IACT,iBAAiB;AACrB;uCAEe","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/env0-lite-frontend/env0-lite-frontend/src/config/index.ts"],"sourcesContent":["export * from \"./api-endpoints\";\r\nexport * from \"./axios\""],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/env0-lite-frontend/env0-lite-frontend/src/services/query/useAuthentication.ts"],"sourcesContent":["import { apiEndpoints } from \"@/config\";\r\nimport axiosPrivate from \"@/config/axios\";\r\n\r\ninterface LogInParams {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface SignInParams {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  role: string;\r\n}\r\n\r\ninterface AuthSignInParams {\r\n  email: string;\r\n  role: string;\r\n  password: string\r\n}\r\n\r\ninterface SignInResponse {\r\n  token: string;\r\n  user: { id: string; name: string };\r\n  email: string;\r\n  role: string;\r\n  password: string\r\n}\r\n\r\ninterface SignInByEmailResponse {\r\n    userId: string,\r\n    username: string,\r\n    name: string,\r\n    email: string,\r\n    role: string,\r\n    createdAt: string,\r\n    updatedAt: string,\r\n}\r\n\r\nexport async function logIn(params: LogInParams): Promise<SignInResponse> {\r\n  const apiBaseUrl = apiEndpoints.auth;\r\n\r\n  const response = await axiosPrivate.post(apiBaseUrl.login, params);\r\n  return response.data;\r\n}\r\n\r\nexport async function signIn(params: SignInParams): Promise<SignInResponse> {\r\n  const apiBaseUrl = apiEndpoints.auth;\r\n\r\n  const response = await axiosPrivate.post(apiBaseUrl.signUp, params);\r\n  return response.data;\r\n}\r\n\r\nexport async function authSignIn(params: AuthSignInParams): Promise<SignInResponse> {\r\n  const apiBaseUrl = apiEndpoints.auth;\r\n\r\n  const response = await axiosPrivate.post(apiBaseUrl.signUp, params);\r\n  return response.data;\r\n}\r\n\r\nexport async function checkUserByEmail(params: {email: string}): Promise<SignInByEmailResponse> {\r\n  const apiBaseUrl = apiEndpoints.auth;\r\n\r\n  const response = await axiosPrivate.post(apiBaseUrl.byEmail, params);\r\n  return response.data;\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;;;AAsCO,eAAe,MAAM,MAAmB;IAC7C,MAAM,aAAa,mJAAY,CAAC,IAAI;IAEpC,MAAM,WAAW,MAAM,mIAAY,CAAC,IAAI,CAAC,WAAW,KAAK,EAAE;IAC3D,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,OAAO,MAAoB;IAC/C,MAAM,aAAa,mJAAY,CAAC,IAAI;IAEpC,MAAM,WAAW,MAAM,mIAAY,CAAC,IAAI,CAAC,WAAW,MAAM,EAAE;IAC5D,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,WAAW,MAAwB;IACvD,MAAM,aAAa,mJAAY,CAAC,IAAI;IAEpC,MAAM,WAAW,MAAM,mIAAY,CAAC,IAAI,CAAC,WAAW,MAAM,EAAE;IAC5D,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,iBAAiB,MAAuB;IAC5D,MAAM,aAAa,mJAAY,CAAC,IAAI;IAEpC,MAAM,WAAW,MAAM,mIAAY,CAAC,IAAI,CAAC,WAAW,OAAO,EAAE;IAC7D,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/env0-lite-frontend/env0-lite-frontend/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import { session } from '@/lib/session'\r\nimport { NextAuthOptions } from 'next-auth'\r\nimport NextAuth from 'next-auth/next'\r\nimport GoogleProvider from 'next-auth/providers/google'\r\nimport GithubProvider from 'next-auth/providers/github'\r\nimport GitlabProvider from 'next-auth/providers/gitlab'\r\nimport { OAuthConfig, OAuthUserConfig } from 'next-auth/providers/oauth'\r\nimport { authSignIn, checkUserByEmail } from '@/services/query/useAuthentication'\r\n\r\n\r\nconst GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID!\r\nconst GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET!\r\nconst GITHUB_CLIENT_ID = process.env.GITHUB_CLIENT_ID!\r\nconst GITHUB_CLIENT_SECRET = process.env.GITHUB_CLIENT_SECRET!\r\n\r\nconst authOption: NextAuthOptions = {\r\n  session: {\r\n    strategy: 'jwt',\r\n  },\r\n  providers: [\r\n     GithubProvider({\r\n      clientId: GITHUB_CLIENT_ID,\r\n      clientSecret: GITHUB_CLIENT_SECRET,\r\n    }),\r\n    GoogleProvider({\r\n      clientId: GOOGLE_CLIENT_ID,\r\n      clientSecret: GOOGLE_CLIENT_SECRET,\r\n    }),\r\n    GitlabProvider({\r\n      clientId: process.env.GITLAB_CLIENT_ID!,\r\n      clientSecret: process.env.GITLAB_CLIENT_SECRET!,\r\n    }),\r\n    BitbucketProvider({\r\n      clientId: process.env.GITLAB_CLIENT_ID!,\r\n      clientSecret: process.env.GITLAB_CLIENT_SECRET!,\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    async signIn({ profile }) {\r\n        if (!profile?.email) throw new Error(\"No profile\");\r\n\r\n        try {\r\n      // 1. Check if user exists in DB\r\n      const existingUser = await checkUserByEmail({email: profile.email}); \r\n\r\n      if (existingUser) {\r\n        return true;\r\n      }\r\n\r\n      const res = await authSignIn({email: profile?.email, password:\"\", role:'user'});\r\n\r\n    } catch (err) {\r\n        console.error(\"API error:\", err);\r\n        return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n    session,\r\n    async redirect({ url, baseUrl }) {\r\n    return `${baseUrl}/dashboard`;\r\n    },\r\n    async jwt({ token, profile }) {\r\n        try {\r\n            if (!profile?.email) throw new Error(\"No email in profile\");\r\n\r\n            const existingUser = await checkUserByEmail({ email: profile.email });\r\n\r\n            const providerId = (profile as any).id || (profile as any).sub || (profile as any).uuid;\r\n\r\n            token.id = existingUser?.userId.toString() || providerId;\r\n            token.email = profile.email;\r\n            token.role = existingUser?.role || \"user\";\r\n\r\n        } catch (err) {\r\n            console.error(\"JWT callback error:\", err);\r\n            token.id = token.id || \"unknown\";\r\n            token.email = token.email || \"unknown@example.com\";\r\n            token.role = token.role || \"user\";\r\n        }\r\n\r\n        return token;\r\n        },\r\n  },\r\n}\r\n\r\nfunction BitbucketProvider<P extends Record<string, any>>(\r\n  options: OAuthUserConfig<P>\r\n): OAuthConfig<P> {\r\n  return {\r\n    id: \"bitbucket\",\r\n    name: \"Bitbucket\",\r\n    type: \"oauth\",\r\n    authorization: {\r\n      url: \"https://bitbucket.org/site/oauth2/authorize\",\r\n      params: { scope: \"account email\" }, \r\n    },\r\n    token: \"https://bitbucket.org/site/oauth2/access_token\",\r\n    userinfo: \"https://api.bitbucket.org/2.0/user\",\r\n    async profile(profile, tokens) {\r\n      return {\r\n        id: profile.uuid,\r\n        name: profile.display_name,\r\n        email: profile.email ?? null,\r\n        image: profile.links?.avatar?.href ?? null,\r\n      };\r\n    },\r\n    options,\r\n  };\r\n}\r\n\r\n\r\nconst handler = NextAuth(authOption)\r\nexport { handler as GET, handler as POST }"],"names":[],"mappings":";;;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;AAGA,MAAM,mBAAmB,QAAQ,GAAG,CAAC,gBAAgB;AACrD,MAAM,uBAAuB,QAAQ,GAAG,CAAC,oBAAoB;AAC7D,MAAM,mBAAmB,QAAQ,GAAG,CAAC,gBAAgB;AACrD,MAAM,uBAAuB,QAAQ,GAAG,CAAC,oBAAoB;AAE7D,MAAM,aAA8B;IAClC,SAAS;QACP,UAAU;IACZ;IACA,WAAW;QACR,IAAA,gKAAc,EAAC;YACd,UAAU;YACV,cAAc;QAChB;QACA,IAAA,gKAAc,EAAC;YACb,UAAU;YACV,cAAc;QAChB;QACA,IAAA,gKAAc,EAAC;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;QACA,kBAAkB;YAChB,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;KACD;IACD,WAAW;QACT,MAAM,QAAO,EAAE,OAAO,EAAE;YACpB,IAAI,CAAC,SAAS,OAAO,MAAM,IAAI,MAAM;YAErC,IAAI;gBACN,gCAAgC;gBAChC,MAAM,eAAe,MAAM,IAAA,mKAAgB,EAAC;oBAAC,OAAO,QAAQ,KAAK;gBAAA;gBAEjE,IAAI,cAAc;oBAChB,OAAO;gBACT;gBAEA,MAAM,MAAM,MAAM,IAAA,6JAAU,EAAC;oBAAC,OAAO,SAAS;oBAAO,UAAS;oBAAI,MAAK;gBAAM;YAE/E,EAAE,OAAO,KAAK;gBACV,QAAQ,KAAK,CAAC,cAAc;gBAC5B,OAAO;YACP;YAEA,OAAO;QACX;QACA,SAAA,kIAAO;QACP,MAAM,UAAS,EAAE,GAAG,EAAE,OAAO,EAAE;YAC/B,OAAO,GAAG,QAAQ,UAAU,CAAC;QAC7B;QACA,MAAM,KAAI,EAAE,KAAK,EAAE,OAAO,EAAE;YACxB,IAAI;gBACA,IAAI,CAAC,SAAS,OAAO,MAAM,IAAI,MAAM;gBAErC,MAAM,eAAe,MAAM,IAAA,mKAAgB,EAAC;oBAAE,OAAO,QAAQ,KAAK;gBAAC;gBAEnE,MAAM,aAAa,AAAC,QAAgB,EAAE,IAAI,AAAC,QAAgB,GAAG,IAAI,AAAC,QAAgB,IAAI;gBAEvF,MAAM,EAAE,GAAG,cAAc,OAAO,cAAc;gBAC9C,MAAM,KAAK,GAAG,QAAQ,KAAK;gBAC3B,MAAM,IAAI,GAAG,cAAc,QAAQ;YAEvC,EAAE,OAAO,KAAK;gBACV,QAAQ,KAAK,CAAC,uBAAuB;gBACrC,MAAM,EAAE,GAAG,MAAM,EAAE,IAAI;gBACvB,MAAM,KAAK,GAAG,MAAM,KAAK,IAAI;gBAC7B,MAAM,IAAI,GAAG,MAAM,IAAI,IAAI;YAC/B;YAEA,OAAO;QACP;IACN;AACF;AAEA,SAAS,kBACP,OAA2B;IAE3B,OAAO;QACL,IAAI;QACJ,MAAM;QACN,MAAM;QACN,eAAe;YACb,KAAK;YACL,QAAQ;gBAAE,OAAO;YAAgB;QACnC;QACA,OAAO;QACP,UAAU;QACV,MAAM,SAAQ,OAAO,EAAE,MAAM;YAC3B,OAAO;gBACL,IAAI,QAAQ,IAAI;gBAChB,MAAM,QAAQ,YAAY;gBAC1B,OAAO,QAAQ,KAAK,IAAI;gBACxB,OAAO,QAAQ,KAAK,EAAE,QAAQ,QAAQ;YACxC;QACF;QACA;IACF;AACF;AAGA,MAAM,UAAU,IAAA,0JAAQ,EAAC","debugId":null}}]
}