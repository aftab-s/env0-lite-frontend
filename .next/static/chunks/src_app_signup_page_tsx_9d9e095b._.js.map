{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/app/signup/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function SignupForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"user\");\r\n  const [errors, setErrors] = useState<{\r\n    email?: string;\r\n    password?: string;\r\n    confirmPassword?: string;\r\n  }>({});\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors: typeof errors = {};\r\n\r\n    // Email validation\r\n    if (!email.trim()) newErrors.email = \"Email is required\";\r\n    else {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(email)) newErrors.email = \"Invalid email format\";\r\n    }\r\n\r\n    // Password validation\r\n    if (!password.trim()) newErrors.password = \"Password is required\";\r\n    else if (password.length < 6)\r\n      newErrors.password = \"Password must be at least 6 characters\";\r\n\r\n    // Confirm password validation\r\n    if (confirmPassword !== password)\r\n      newErrors.confirmPassword = \"Passwords do not match\";\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n\r\n    setErrors({}); // clear errors\r\n\r\n    try {\r\n      // Call your API to create user\r\n      /*\r\n      await createUser({\r\n        email,\r\n        password,\r\n        role\r\n      });\r\n      */\r\n\r\n      console.log({ email, password, role });\r\n    } catch (error) {\r\n      console.error(\"Signup failed:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-screen h-full flex flex-col items-center justify-center bg-[#111111]\">\r\n      <div className=\"w-85 mb-5 flex flex-col items-start justify-center\">\r\n        <span className=\"font-semibold text-[20px]\">Sign Up for TerraFuel</span>\r\n      </div>\r\n\r\n      <div className=\"w-85\">\r\n        <form onSubmit={handleSubmit} className=\"flex flex-col gap-4\">\r\n          {/* Role Dropdown */}\r\n          <div>\r\n            <label className=\"block text-[12px] font-normal mb-1 text-[#EDEDED]\">\r\n              Role\r\n            </label>\r\n            <CommonDropdown\r\n                value={role}\r\n                onChange={setRole}\r\n                options={[\r\n                    { label: \"User\", value: \"user\" },\r\n                    { label: \"Admin\", value: \"admin\" },\r\n                ]}\r\n                placeholder=\"Select Role\"\r\n                />\r\n          </div>\r\n\r\n          {/* Email */}\r\n          <div>\r\n            <label className=\"block text-[12px] font-normal mb-1 text-[#EDEDED]\">\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"your@email.com\"\r\n              className={`w-full rounded-[5px] border px-3 py-2 text-[14px] focus:outline-none ${\r\n                errors.email ? \"border-red-500\" : \"border-[#2A2A2A]\"\r\n              }`}\r\n            />\r\n            <p className=\"text-red-500 text-xs mt-1\">{errors.email || \"\"}</p>\r\n          </div>\r\n\r\n          {/* Password */}\r\n          <div>\r\n            <label className=\"block text-[12px] font-normal mb-1 text-[#EDEDED]\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"password\"\r\n              className={`w-full rounded-[5px] border px-3 py-2 text-[14px] focus:outline-none ${\r\n                errors.password ? \"border-red-500\" : \"border-[#2A2A2A]\"\r\n              }`}\r\n            />\r\n            <p className=\"text-red-500 text-xs mt-1\">{errors.password || \"\"}</p>\r\n          </div>\r\n\r\n          {/* Confirm Password */}\r\n          <div>\r\n            <label className=\"block text-[12px] font-normal mb-1 text-[#EDEDED]\">\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              placeholder=\"confirm password\"\r\n              className={`w-full rounded-[5px] border px-3 py-2 text-[14px] focus:outline-none ${\r\n                errors.confirmPassword ? \"border-red-500\" : \"border-[#2A2A2A]\"\r\n              }`}\r\n            />\r\n            <p className=\"text-red-500 text-xs mt-1\">{errors.confirmPassword || \"\"}</p>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full text-[14px] bg-[#FFFFFF] text-black rounded-[5px] py-2 font-medium hover:bg-blue-700\"\r\n          >\r\n            Sign Up\r\n          </button>\r\n        </form>\r\n\r\n        {/* Links */}\r\n        <div className=\"mt-6 flex flex-col items-start gap-2 text-[12px]\">\r\n          <p>\r\n            Already have an account?{\" \"}\r\n            <a href=\"/\" className=\"text-[#A259FF] hover:underline\">\r\n              Sign in\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}