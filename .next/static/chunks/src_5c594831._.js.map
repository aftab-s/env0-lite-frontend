{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/components/Dropdown/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\nimport { useDarkMode } from \"@/context/DarkModeProvider\";\r\n\r\ninterface DropdownOption {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface CommonDropdownProps {\r\n  value: string;\r\n  onChange: (val: string) => void;\r\n  options: DropdownOption[];\r\n  placeholder?: string;\r\n  helperText?: string;\r\n  error?: string;\r\n}\r\n\r\nexport default function CommonDropdown({\r\n  value,\r\n  onChange,\r\n  options,\r\n  placeholder = \"Select...\",\r\n  helperText,\r\n  error,\r\n}: CommonDropdownProps) {\r\n  const { darkMode } = useDarkMode();\r\n  const [open, setOpen] = useState(false);\r\n  const dropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  const bgColor = darkMode ? \"bg-[#111111]\" : \"bg-white\";\r\n  const borderColor = error\r\n    ? \"border-red-500\"\r\n    : darkMode\r\n    ? \"border-[#2A2A2A]\"\r\n    : \"border-gray-300\";\r\n  const textColor = darkMode ? \"text-white\" : \"text-black\";\r\n  const helperColor = darkMode ? \"text-gray-400\" : \"text-gray-600\";\r\n  const hoverBg = darkMode ? \"hover:bg-[#2A2A2A]\" : \"hover:bg-gray-100\";\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (\r\n        dropdownRef.current &&\r\n        !dropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        setOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  const selectedLabel = options.find((opt) => opt.value === value)?.label;\r\n\r\n  return (\r\n    <div className=\"relative w-full\" ref={dropdownRef}>\r\n      <div\r\n        className={`w-full rounded-[5px] border px-3 py-2 text-[14px] cursor-pointer flex justify-between items-center ${bgColor} ${borderColor} ${textColor} transition-colors duration-500`}\r\n        onClick={() => setOpen(!open)}\r\n      >\r\n        <span>{selectedLabel || placeholder}</span>\r\n        <Image\r\n          src=\"/Drop.svg\"\r\n          alt=\"Dropdown\"\r\n          width={10}\r\n          height={10}\r\n          className={`ml-2 transition-transform ${\r\n            open ? \"rotate-180\" : \"\"\r\n          } ${darkMode ? \"invert\" : \"\"}`}\r\n        />\r\n      </div>\r\n\r\n      {open && (\r\n        <div\r\n          className={`absolute top-full left-0 w-full ${bgColor} border ${borderColor} rounded-[5px] z-10 max-h-60 overflow-y-auto mt-[-18px] transition-colors duration-500`}\r\n        >\r\n          {options.map((option) => (\r\n            <div\r\n              key={option.value}\r\n              className={`px-3 py-2 text-[14px] cursor-pointer ${hoverBg} ${textColor}`}\r\n              onClick={() => {\r\n                onChange(option.value);\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              {option.label}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {error ? (\r\n        <p className=\"text-red-500 text-xs mt-1\">{error}</p>\r\n      ) : helperText ? (\r\n        <p className={`${helperColor} text-xs mt-1`}>{helperText}</p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;AAHA;;;;AAmBe,SAAS,eAAe,KAOjB;QAPiB,EACrC,KAAK,EACL,QAAQ,EACR,OAAO,EACP,cAAc,WAAW,EACzB,UAAU,EACV,KAAK,EACe,GAPiB;QAmCf;;IA3BtB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,qJAAW;IAChC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAC;IACjC,MAAM,cAAc,IAAA,uKAAM,EAAiB;IAE3C,MAAM,UAAU,WAAW,iBAAiB;IAC5C,MAAM,cAAc,QAChB,mBACA,WACA,qBACA;IACJ,MAAM,YAAY,WAAW,eAAe;IAC5C,MAAM,cAAc,WAAW,kBAAkB;IACjD,MAAM,UAAU,WAAW,uBAAuB;IAElD,IAAA,0KAAS;oCAAC;YACR,MAAM;+DAAqB,CAAC;oBAC1B,IACE,YAAY,OAAO,IACnB,CAAC,YAAY,OAAO,CAAC,QAAQ,CAAC,MAAM,MAAM,GAC1C;wBACA,QAAQ;oBACV;gBACF;;YACA,SAAS,gBAAgB,CAAC,aAAa;YACvC;4CAAO,IAAM,SAAS,mBAAmB,CAAC,aAAa;;QACzD;mCAAG,EAAE;IAEL,MAAM,iBAAgB,gBAAA,QAAQ,IAAI,CAAC,CAAC,MAAQ,IAAI,KAAK,KAAK,oBAApC,oCAAA,cAA4C,KAAK;IAEvE,qBACE,6LAAC;QAAI,WAAU;QAAkB,KAAK;;0BACpC,6LAAC;gBACC,WAAW,AAAC,sGAAgH,OAAX,SAAQ,KAAkB,OAAf,aAAY,KAAa,OAAV,WAAU;gBACrJ,SAAS,IAAM,QAAQ,CAAC;;kCAExB,6LAAC;kCAAM,iBAAiB;;;;;;kCACxB,6LAAC,2IAAK;wBACJ,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,WAAW,AAAC,6BAER,OADF,OAAO,eAAe,IACvB,KAA4B,OAAzB,WAAW,WAAW;;;;;;;;;;;;YAI7B,sBACC,6LAAC;gBACC,WAAW,AAAC,mCAAoD,OAAlB,SAAQ,YAAsB,OAAZ,aAAY;0BAE3E,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC;wBAEC,WAAW,AAAC,wCAAkD,OAAX,SAAQ,KAAa,OAAV;wBAC9D,SAAS;4BACP,SAAS,OAAO,KAAK;4BACrB,QAAQ;wBACV;kCAEC,OAAO,KAAK;uBAPR,OAAO,KAAK;;;;;;;;;;YAaxB,sBACC,6LAAC;gBAAE,WAAU;0BAA6B;;;;;uBACxC,2BACF,6LAAC;gBAAE,WAAW,AAAC,GAAc,OAAZ,aAAY;0BAAiB;;;;;uBAC5C;;;;;;;AAGV;GAjFwB;;QAQD,qJAAW;;;KARV","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/components/PrimaryButton/page.tsx"],"sourcesContent":["'use client';\r\nimport React, { ReactNode } from \"react\";\r\nimport { useDarkMode } from \"@/context/DarkModeProvider\";\r\n\r\ninterface ButtonProps {\r\n  children: ReactNode;\r\n  onClick?: () => void;\r\n  type?: \"button\" | \"submit\" | \"reset\";\r\n  className?: string;\r\n  disabled?: boolean;\r\n  variant?: \"primary\" | \"secondary\" | \"tertiary\";\r\n}\r\n\r\nexport default function Button({\r\n  children,\r\n  onClick,\r\n  type = \"button\",\r\n  className = \"\",\r\n  disabled = false,\r\n  variant = \"primary\",\r\n}: ButtonProps) {\r\n  const { darkMode } = useDarkMode();\r\n\r\n  let bgColor = \"\";\r\n  let textColor = \"\";\r\n  let border = \"\";\r\n  let hoverBg = \"\";\r\n  let widthClass = \"w-full\"; // default full width for primary\r\n\r\n  switch (variant) {\r\n    case \"primary\":\r\n      bgColor = darkMode ? \"bg-white\" : \"bg-black\";\r\n      textColor = darkMode ? \"text-black\" : \"text-white\";\r\n      hoverBg = darkMode ? \"hover:bg-gray-200\" : \"hover:bg-gray-800\";\r\n      border = \"border-none\";\r\n      widthClass = \"w-full\"; // full width\r\n      break;\r\n    case \"secondary\":\r\n      bgColor = \"bg-transparent\";\r\n      textColor = darkMode ? \"text-white\" : \"text-black\";\r\n      border = \"border border-[#4B5563]\";\r\n      hoverBg = darkMode ? \"hover:bg-gray-700\" : \"hover:bg-gray-200\";\r\n      widthClass = \"w-auto px-4\"; // smaller width\r\n      break;\r\n    case \"tertiary\":\r\n      bgColor = \"bg-[#0070F3]\";\r\n      textColor = \"text-white\";\r\n      border = \"border-none\";\r\n      hoverBg = \"hover:bg-[#0055c2]\";\r\n      widthClass = \"w-auto px-4\"; // smaller width\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      className={`text-[14px] rounded-[5px] py-2 font-medium transition-colors duration-300\r\n        ${bgColor} ${textColor} ${border} ${hoverBg} ${widthClass} disabled:opacity-50 disabled:cursor-not-allowed ${className}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAae,SAAS,OAAO,KAOjB;QAPiB,EAC7B,QAAQ,EACR,OAAO,EACP,OAAO,QAAQ,EACf,YAAY,EAAE,EACd,WAAW,KAAK,EAChB,UAAU,SAAS,EACP,GAPiB;;IAQ7B,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,qJAAW;IAEhC,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,aAAa,UAAU,iCAAiC;IAE5D,OAAQ;QACN,KAAK;YACH,UAAU,WAAW,aAAa;YAClC,YAAY,WAAW,eAAe;YACtC,UAAU,WAAW,sBAAsB;YAC3C,SAAS;YACT,aAAa,UAAU,aAAa;YACpC;QACF,KAAK;YACH,UAAU;YACV,YAAY,WAAW,eAAe;YACtC,SAAS;YACT,UAAU,WAAW,sBAAsB;YAC3C,aAAa,eAAe,gBAAgB;YAC5C;QACF,KAAK;YACH,UAAU;YACV,YAAY;YACZ,SAAS;YACT,UAAU;YACV,aAAa,eAAe,gBAAgB;YAC5C;IACJ;IAEA,qBACE,6LAAC;QACC,MAAM;QACN,SAAS;QACT,UAAU;QACV,WAAW,AAAC,sFACG,OAAX,SAAQ,KAAgB,OAAb,WAAU,KAAa,OAAV,QAAO,KAAc,OAAX,SAAQ,KAAiE,OAA9D,YAAW,qDAA6D,OAAV;kBAE9G;;;;;;AAGP;GAnDwB;;QAQD,qJAAW;;;KARV","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/components/Input/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { InputHTMLAttributes } from \"react\";\r\nimport { useDarkMode } from \"@/context/DarkModeProvider\";\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  label: string;\r\n  helperText?: string;\r\n  error?: string;\r\n}\r\n\r\nexport default function Input({\r\n  label,\r\n  helperText,\r\n  error,\r\n  className = \"\",\r\n  ...props\r\n}: InputProps) {\r\n  const { darkMode } = useDarkMode();\r\n\r\n  const labelColor = darkMode ? \"text-[#EDEDED]\" : \"text-gray-700\";\r\n  const bgColor = darkMode ? \"bg-[#111111]\" : \"bg-white\";\r\n  const borderColor = error\r\n    ? \"border-red-500\"\r\n    : darkMode\r\n    ? \"border-[#2A2A2A]\"\r\n    : \"border-gray-300\";\r\n  const textColor = darkMode ? \"text-white\" : \"text-black\";\r\n  const helperColor = darkMode ? \"text-gray-400\" : \"text-gray-600\";\r\n\r\n  return (\r\n    <div className={`flex flex-col gap-1 ${className}`}> {/* apply className here */}\r\n      <label\r\n        className={`block text-[12px] font-normal ${labelColor} transition-colors duration-500`}\r\n      >\r\n        {label}\r\n      </label>\r\n      <input\r\n        {...props}\r\n        className={`w-full rounded-[5px] border px-3 py-2 text-[14px] focus:outline-none ${bgColor} ${borderColor} ${textColor} transition-colors duration-500`}\r\n      />\r\n      {error ? (\r\n        <p className=\"text-red-500 text-xs\">{error}</p>\r\n      ) : helperText ? (\r\n        <p className={`${helperColor} text-xs transition-colors duration-500`}>\r\n          {helperText}\r\n        </p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAUe,SAAS,MAAM,KAMjB;QANiB,EAC5B,KAAK,EACL,UAAU,EACV,KAAK,EACL,YAAY,EAAE,EACd,GAAG,OACQ,GANiB;;IAO5B,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,qJAAW;IAEhC,MAAM,aAAa,WAAW,mBAAmB;IACjD,MAAM,UAAU,WAAW,iBAAiB;IAC5C,MAAM,cAAc,QAChB,mBACA,WACA,qBACA;IACJ,MAAM,YAAY,WAAW,eAAe;IAC5C,MAAM,cAAc,WAAW,kBAAkB;IAEjD,qBACE,6LAAC;QAAI,WAAW,AAAC,uBAAgC,OAAV;;YAAa;0BAClD,6LAAC;gBACC,WAAW,AAAC,iCAA2C,OAAX,YAAW;0BAEtD;;;;;;0BAEH,6LAAC;gBACE,GAAG,KAAK;gBACT,WAAW,AAAC,wEAAkF,OAAX,SAAQ,KAAkB,OAAf,aAAY,KAAa,OAAV,WAAU;;;;;;YAExH,sBACC,6LAAC;gBAAE,WAAU;0BAAwB;;;;;uBACnC,2BACF,6LAAC;gBAAE,WAAW,AAAC,GAAc,OAAZ,aAAY;0BAC1B;;;;;uBAED;;;;;;;AAGV;GAvCwB;;QAOD,qJAAW;;;KAPV","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/config/api-endpoints.ts"],"sourcesContent":["const apiEndpoints = {\r\n    auth : {\r\n        signUp: \"/api/users/signup\",\r\n        login: \"/api/users/login\",\r\n        byEmail: \"/api/users/email\"\r\n    },\r\n    github: {\r\n        getRepo: \"/api/github-pat/repos/:email\",\r\n        getTree: \"/api/github-pat/repos\"\r\n    }\r\n}\r\n\r\nexport {apiEndpoints}"],"names":[],"mappings":";;;;AAAA,MAAM,eAAe;IACjB,MAAO;QACH,QAAQ;QACR,OAAO;QACP,SAAS;IACb;IACA,QAAQ;QACJ,SAAS;QACT,SAAS;IACb;AACJ","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/config/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosPrivate = axios.create({\r\n    baseURL: \"http://localhost:5000\",\r\n    withCredentials: true,\r\n});\r\n\r\nexport default axiosPrivate;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,eAAe,mJAAK,CAAC,MAAM,CAAC;IAC9B,SAAS;IACT,iBAAiB;AACrB;uCAEe","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/config/index.ts"],"sourcesContent":["export * from \"./api-endpoints\";\r\nexport * from \"./axios\""],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/services/query/useAuthentication.ts"],"sourcesContent":["import { apiEndpoints } from \"@/config\";\r\nimport axiosPrivate from \"@/config/axios\";\r\n\r\ninterface LogInParams {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface SignInParams {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  role: string;\r\n}\r\n\r\ninterface AuthSignInParams {\r\n  email: string;\r\n  role: string;\r\n  password: string\r\n}\r\n\r\ninterface SignInResponse {\r\n  token: string;\r\n  user: { id: string; name: string };\r\n  email: string;\r\n  role: string;\r\n  password: string\r\n}\r\n\r\ninterface SignInByEmailResponse {\r\n    userId: string,\r\n    username: string,\r\n    name: string,\r\n    email: string,\r\n    role: string,\r\n    createdAt: string,\r\n    updatedAt: string,\r\n}\r\n\r\nexport async function logIn(params: LogInParams): Promise<SignInResponse> {\r\n  const apiBaseUrl = apiEndpoints.auth;\r\n\r\n  const response = await axiosPrivate.post(apiBaseUrl.login, params);\r\n  return response.data;\r\n}\r\n\r\nexport async function signIn(params: SignInParams): Promise<SignInResponse> {\r\n  const apiBaseUrl = apiEndpoints.auth;\r\n\r\n  const response = await axiosPrivate.post(apiBaseUrl.signUp, params);\r\n  return response.data;\r\n}\r\n\r\nexport async function authSignIn(params: AuthSignInParams): Promise<SignInResponse> {\r\n  const apiBaseUrl = apiEndpoints.auth;\r\n\r\n  const response = await axiosPrivate.post(apiBaseUrl.signUp, params);\r\n  return response.data;\r\n}\r\n\r\nexport async function checkUserByEmail(params: {email: string}): Promise<SignInByEmailResponse> {\r\n  const apiBaseUrl = apiEndpoints.auth;\r\n\r\n  const response = await axiosPrivate.post(apiBaseUrl.byEmail, params);\r\n  return response.data;\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;;;AAsCO,eAAe,MAAM,MAAmB;IAC7C,MAAM,aAAa,oJAAY,CAAC,IAAI;IAEpC,MAAM,WAAW,MAAM,oIAAY,CAAC,IAAI,CAAC,WAAW,KAAK,EAAE;IAC3D,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,OAAO,MAAoB;IAC/C,MAAM,aAAa,oJAAY,CAAC,IAAI;IAEpC,MAAM,WAAW,MAAM,oIAAY,CAAC,IAAI,CAAC,WAAW,MAAM,EAAE;IAC5D,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,WAAW,MAAwB;IACvD,MAAM,aAAa,oJAAY,CAAC,IAAI;IAEpC,MAAM,WAAW,MAAM,oIAAY,CAAC,IAAI,CAAC,WAAW,MAAM,EAAE;IAC5D,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,iBAAiB,MAAuB;IAC5D,MAAM,aAAa,oJAAY,CAAC,IAAI;IAEpC,MAAM,WAAW,MAAM,oIAAY,CAAC,IAAI,CAAC,WAAW,OAAO,EAAE;IAC7D,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/app/signup/page.tsx"],"sourcesContent":["\"use client\";\r\nimport CommonDropdown from \"@/components/Dropdown/page\";\r\nimport Button from \"@/components/PrimaryButton/page\";\r\nimport Input from \"@/components/Input/page\";\r\nimport { useState } from \"react\";\r\nimport { useDarkMode } from \"@/context/DarkModeProvider\";\r\n// TODO: replace with your actual signup service\r\nimport { signIn } from \"@/services/query/useAuthentication\";\r\n\r\nexport default function SignupForm() {\r\n  const { darkMode } = useDarkMode();\r\n\r\n  const bgColor = darkMode ? \"bg-[#11111]\" : \"bg-[#EFEFEF]\";\r\n  const textColor = darkMode ? \"text-white\" : \"text-black\";\r\n  const subTextColor = darkMode ? \"text-gray-400\" : \"text-gray-600\";\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"user\");\r\n  const [errors, setErrors] = useState<{\r\n    name?: string;\r\n    email?: string;\r\n    password?: string;\r\n    confirmPassword?: string;\r\n  }>({});\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors: typeof errors = {};\r\n\r\n    if (!name.trim()) newErrors.name = \"Name is required\";\r\n\r\n    if (!email.trim()) newErrors.email = \"Email is required\";\r\n    else {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(email)) newErrors.email = \"Invalid email format\";\r\n    }\r\n\r\n    if (!password.trim()) newErrors.password = \"Password is required\";\r\n    else if (password.length < 6)\r\n      newErrors.password = \"Password must be at least 6 characters\";\r\n\r\n    if (confirmPassword !== password)\r\n      newErrors.confirmPassword = \"Passwords do not match\";\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n\r\n    setErrors({});\r\n\r\n    try {\r\n      await signIn({\r\n        name,\r\n        email,\r\n        password,\r\n        role,\r\n      });\r\n\r\n      console.log(\"Signup successful:\", { name, email, role });\r\n    } catch (error) {\r\n      console.error(\"Signup failed:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`w-screen h-full flex flex-col items-center justify-center transition-colors duration-500 ${bgColor}`}\r\n    >\r\n      <div className=\"w-85 mb-5 flex flex-col items-start justify-center\">\r\n        <span className={`font-semibold text-[20px] ${textColor}`}>\r\n          Sign Up for TerraFuel\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"w-85\">\r\n        <form onSubmit={handleSubmit} className=\"flex flex-col gap-4\">\r\n          <Input\r\n            label=\"Name\"\r\n            helperText=\"Enter your full name\"\r\n            type=\"text\"\r\n            placeholder=\"Your full name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            error={errors.name}\r\n          />\r\n\r\n          <Input\r\n            label=\"Email\"\r\n            helperText=\"Enter your email address\"\r\n            type=\"email\"\r\n            placeholder=\"your@email.com\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            error={errors.email}\r\n          />\r\n\r\n          <div>\r\n            <label\r\n              className={`block text-[12px] font-normal mb-1 ${textColor}`}\r\n            >\r\n              Role\r\n            </label>\r\n            <CommonDropdown\r\n              value={role}\r\n              onChange={setRole}\r\n              options={[\r\n                { label: \"User\", value: \"user\" },\r\n                { label: \"Admin\", value: \"admin\" },\r\n              ]}\r\n              placeholder=\"Select Role\"\r\n              helperText=\"Choose a role for this account\"\r\n            />\r\n          </div>\r\n\r\n          <Input\r\n            label=\"Password\"\r\n            helperText=\"Minimum 6 characters\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            error={errors.password}\r\n          />\r\n\r\n          <Input\r\n            label=\"Confirm Password\"\r\n            helperText=\"Re-enter your password\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            error={errors.confirmPassword}\r\n          />\r\n\r\n          <Button type=\"submit\">Sign Up</Button>\r\n        </form>\r\n\r\n        <div className={`mt-6 flex flex-col items-start gap-2 text-[12px] ${subTextColor}`}>\r\n          <p>\r\n            Already have an account?{\" \"}\r\n            <a href=\"/\" className={`hover:underline ${\r\n                darkMode ? \"text-[#A259FF]\" : \"text-[#6B21A8]\"\r\n              }`}>\r\n              Sign in\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;;;AAPA;;;;;;;AASe,SAAS;;IACtB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,qJAAW;IAEhC,MAAM,UAAU,WAAW,gBAAgB;IAC3C,MAAM,YAAY,WAAW,eAAe;IAC5C,MAAM,eAAe,WAAW,kBAAkB;IAElD,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAC;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,yKAAQ,EAAC;IACvD,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAC;IACjC,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAKjC,CAAC;IAEJ,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,MAAM,YAA2B,CAAC;QAElC,IAAI,CAAC,KAAK,IAAI,IAAI,UAAU,IAAI,GAAG;QAEnC,IAAI,CAAC,MAAM,IAAI,IAAI,UAAU,KAAK,GAAG;aAChC;YACH,MAAM,aAAa;YACnB,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ,UAAU,KAAK,GAAG;QACjD;QAEA,IAAI,CAAC,SAAS,IAAI,IAAI,UAAU,QAAQ,GAAG;aACtC,IAAI,SAAS,MAAM,GAAG,GACzB,UAAU,QAAQ,GAAG;QAEvB,IAAI,oBAAoB,UACtB,UAAU,eAAe,GAAG;QAE9B,IAAI,OAAO,IAAI,CAAC,WAAW,MAAM,GAAG,GAAG;YACrC,UAAU;YACV;QACF;QAEA,UAAU,CAAC;QAEX,IAAI;YACF,MAAM,IAAA,0JAAM,EAAC;gBACX;gBACA;gBACA;gBACA;YACF;YAEA,QAAQ,GAAG,CAAC,sBAAsB;gBAAE;gBAAM;gBAAO;YAAK;QACxD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kBAAkB;QAClC;IACF;IAEA,qBACE,6LAAC;QACC,WAAW,AAAC,4FAAmG,OAAR;;0BAEvG,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAK,WAAW,AAAC,6BAAsC,OAAV;8BAAa;;;;;;;;;;;0BAK7D,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,UAAU;wBAAc,WAAU;;0CACtC,6LAAC,iJAAK;gCACJ,OAAM;gCACN,YAAW;gCACX,MAAK;gCACL,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gCACvC,OAAO,OAAO,IAAI;;;;;;0CAGpB,6LAAC,iJAAK;gCACJ,OAAM;gCACN,YAAW;gCACX,MAAK;gCACL,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gCACxC,OAAO,OAAO,KAAK;;;;;;0CAGrB,6LAAC;;kDACC,6LAAC;wCACC,WAAW,AAAC,sCAA+C,OAAV;kDAClD;;;;;;kDAGD,6LAAC,oJAAc;wCACb,OAAO;wCACP,UAAU;wCACV,SAAS;4CACP;gDAAE,OAAO;gDAAQ,OAAO;4CAAO;4CAC/B;gDAAE,OAAO;gDAAS,OAAO;4CAAQ;yCAClC;wCACD,aAAY;wCACZ,YAAW;;;;;;;;;;;;0CAIf,6LAAC,iJAAK;gCACJ,OAAM;gCACN,YAAW;gCACX,MAAK;gCACL,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,OAAO,OAAO,QAAQ;;;;;;0CAGxB,6LAAC,iJAAK;gCACJ,OAAM;gCACN,YAAW;gCACX,MAAK;gCACL,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;gCAClD,OAAO,OAAO,eAAe;;;;;;0CAG/B,6LAAC,yJAAM;gCAAC,MAAK;0CAAS;;;;;;;;;;;;kCAGxB,6LAAC;wBAAI,WAAW,AAAC,oDAAgE,OAAb;kCAClE,cAAA,6LAAC;;gCAAE;gCACwB;8CACzB,6LAAC;oCAAE,MAAK;oCAAI,WAAW,AAAC,mBAErB,OADC,WAAW,mBAAmB;8CAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQlB;GAlJwB;;QACD,qJAAW;;;KADV","debugId":null}}]
}