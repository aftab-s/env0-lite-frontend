{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/components/Input/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { InputHTMLAttributes } from \"react\";\r\nimport { useDarkMode } from \"@/context/DarkModeProvider\";\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  label: string;\r\n  helperText?: string;\r\n  error?: string;\r\n}\r\n\r\nexport default function Input({\r\n  label,\r\n  helperText,\r\n  error,\r\n  className = \"\",\r\n  ...props\r\n}: InputProps) {\r\n  const { darkMode } = useDarkMode();\r\n\r\n  const labelColor = darkMode ? \"text-[#EDEDED]\" : \"text-gray-700\";\r\n  const bgColor = darkMode ? \"bg-[#111111]\" : \"bg-white\";\r\n  const borderColor = error\r\n    ? \"border-red-500\"\r\n    : darkMode\r\n    ? \"border-[#2A2A2A]\"\r\n    : \"border-gray-300\";\r\n  const textColor = darkMode ? \"text-white\" : \"text-black\";\r\n  const helperColor = darkMode ? \"text-gray-400\" : \"text-gray-600\";\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-1\">\r\n      <label className={`block text-[12px] font-normal ${labelColor} transition-colors duration-500`}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        {...props}\r\n        className={`w-full rounded-[5px] border px-3 py-2 text-[14px] focus:outline-none ${bgColor} ${borderColor} ${textColor} ${className} transition-colors duration-500`}\r\n      />\r\n      {error ? (\r\n        <p className=\"text-red-500 text-xs\">{error}</p>\r\n      ) : helperText ? (\r\n        <p className={`${helperColor} text-xs transition-colors duration-500`}>{helperText}</p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAUe,SAAS,MAAM,KAMjB;QANiB,EAC5B,KAAK,EACL,UAAU,EACV,KAAK,EACL,YAAY,EAAE,EACd,GAAG,OACQ,GANiB;;IAO5B,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,qJAAW;IAEhC,MAAM,aAAa,WAAW,mBAAmB;IACjD,MAAM,UAAU,WAAW,iBAAiB;IAC5C,MAAM,cAAc,QAChB,mBACA,WACA,qBACA;IACJ,MAAM,YAAY,WAAW,eAAe;IAC5C,MAAM,cAAc,WAAW,kBAAkB;IAEjD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,WAAW,AAAC,iCAA2C,OAAX,YAAW;0BAC3D;;;;;;0BAEH,6LAAC;gBACE,GAAG,KAAK;gBACT,WAAW,AAAC,wEAAkF,OAAX,SAAQ,KAAkB,OAAf,aAAY,KAAgB,OAAb,WAAU,KAAa,OAAV,WAAU;;;;;;YAErI,sBACC,6LAAC;gBAAE,WAAU;0BAAwB;;;;;uBACnC,2BACF,6LAAC;gBAAE,WAAW,AAAC,GAAc,OAAZ,aAAY;0BAA2C;;;;;uBACtE;;;;;;;AAGV;GAnCwB;;QAOD,qJAAW;;;KAPV","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/components/PrimaryButton/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { ReactNode } from \"react\";\r\nimport { useDarkMode } from \"@/context/DarkModeProvider\";\r\n\r\ninterface ButtonProps {\r\n  children: ReactNode;\r\n  onClick?: () => void;\r\n  type?: \"button\" | \"submit\" | \"reset\";\r\n  className?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport default function Button({\r\n  children,\r\n  onClick,\r\n  type = \"button\",\r\n  className = \"\",\r\n  disabled = false,\r\n}: ButtonProps) {\r\n  const { darkMode } = useDarkMode();\r\n\r\n  const bgColor = darkMode ? \"bg-white\" : \"bg-black\";\r\n  const textColor = darkMode ? \"text-black\" : \"text-white\";\r\n  const hoverBg = darkMode ? \"hover:bg-gray-200\" : \"hover:bg-gray-800\";\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      className={`w-full text-[14px] rounded-[5px] py-2 font-medium ${bgColor} ${textColor} ${hoverBg} disabled:opacity-50 disabled:cursor-not-allowed ${className} `}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAYe,SAAS,OAAO,KAMjB;QANiB,EAC7B,QAAQ,EACR,OAAO,EACP,OAAO,QAAQ,EACf,YAAY,EAAE,EACd,WAAW,KAAK,EACJ,GANiB;;IAO7B,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,qJAAW;IAEhC,MAAM,UAAU,WAAW,aAAa;IACxC,MAAM,YAAY,WAAW,eAAe;IAC5C,MAAM,UAAU,WAAW,sBAAsB;IAEjD,qBACE,6LAAC;QACC,MAAM;QACN,SAAS;QACT,UAAU;QACV,WAAW,AAAC,qDAA+D,OAAX,SAAQ,KAAgB,OAAb,WAAU,KAA8D,OAA3D,SAAQ,qDAA6D,OAAV,WAAU;kBAE5J;;;;;;AAGP;GAvBwB;;QAOD,qJAAW;;;KAPV","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sures/Desktop/Env0/env0-lite-frontend/src/app/forgot-password/page.tsx"],"sourcesContent":["\"use client\";\r\nimport Input from \"@/components/Input/page\";\r\nimport Button from \"@/components/PrimaryButton/page\";\r\nimport { useDarkMode } from \"@/context/DarkModeProvider\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ForgotPassword() {\r\n  const { darkMode } = useDarkMode();\r\n\r\n  const [step, setStep] = useState<\"email\" | \"otp\" | \"reset\">(\"email\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [errors, setErrors] = useState<{\r\n    email?: string;\r\n    otp?: string;\r\n    password?: string;\r\n    confirmPassword?: string;\r\n  }>({});\r\n\r\n  const mainBg = darkMode ? \"bg-[#111111]\" : \"bg-[#EFEFEF]\";\r\n  const textColor = darkMode ? \"text-white\" : \"text-black\";\r\n  const subTextColor = darkMode ? \"text-gray-400\" : \"text-gray-600\";\r\n\r\n  const handleEmailSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const newErrors: typeof errors = {};\r\n\r\n    if (!email.trim()) newErrors.email = \"Email is required\";\r\n    else {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(email)) newErrors.email = \"Invalid email format\";\r\n    }\r\n\r\n    if (Object.keys(newErrors).length > 0) return setErrors(newErrors);\r\n\r\n    setErrors({});\r\n    try {\r\n      // await sendOtp({ email });\r\n      setMessage(\"If this email is registered, an OTP has been sent.\");\r\n      setStep(\"otp\");\r\n    } catch {\r\n      setMessage(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleOtpSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!otp.trim()) return setErrors({ otp: \"OTP is required\" });\r\n\r\n    setErrors({});\r\n    try {\r\n      // const valid = await verifyOtp({ email, otp });\r\n      const valid = true;\r\n      if (valid) setStep(\"reset\");\r\n      else setErrors({ otp: \"Invalid OTP\" });\r\n    } catch {\r\n      setMessage(\"OTP verification failed. Try again.\");\r\n    }\r\n  };\r\n\r\n  const handleResetSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const newErrors: typeof errors = {};\r\n\r\n    if (!password.trim()) newErrors.password = \"Password is required\";\r\n    else if (password.length < 6)\r\n      newErrors.password = \"Password must be at least 6 characters\";\r\n\r\n    if (confirmPassword !== password)\r\n      newErrors.confirmPassword = \"Passwords do not match\";\r\n\r\n    if (Object.keys(newErrors).length > 0) return setErrors(newErrors);\r\n\r\n    setErrors({});\r\n    try {\r\n      // await resetPassword({ email, password });\r\n      setMessage(\"Password reset successful. You can now log in.\");\r\n      setStep(\"email\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setOtp(\"\");\r\n    } catch {\r\n      setMessage(\"Password reset failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`w-screen h-full flex flex-col items-center justify-center ${mainBg} transition-colors duration-500`}\r\n    >\r\n      <div className=\"w-85 mb-5 flex flex-col items-start justify-center\">\r\n        <span className={`font-semibold text-[20px] ${textColor}`}>\r\n          Forgot Password\r\n        </span>\r\n        {message && (\r\n          <span className={`text-sm mt-1 ${subTextColor}`}>{message}</span>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"w-85\">\r\n        {step === \"email\" && (\r\n          <form onSubmit={handleEmailSubmit} className=\"flex flex-col gap-4\">\r\n            <Input\r\n              helperText=\"Registered account email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              placeholder=\"your@email.com\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              error={errors.email}\r\n            />\r\n            <Button type=\"submit\">Send OTP</Button>\r\n          </form>\r\n        )}\r\n\r\n        {step === \"otp\" && (\r\n          <form onSubmit={handleOtpSubmit} className=\"flex flex-col gap-4\">\r\n            <Input\r\n              helperText=\"Enter the OTP sent to your email\"\r\n              label=\"OTP\"\r\n              type=\"text\"\r\n              placeholder=\"Enter OTP\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value)}\r\n              error={errors.otp}\r\n            />\r\n            <Button type=\"submit\">Verify OTP</Button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleEmailSubmit}\r\n              className=\"text-xs text-[#6B21A8] hover:underline\"\r\n            >\r\n              Resend OTP\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        {step === \"reset\" && (\r\n          <form onSubmit={handleResetSubmit} className=\"flex flex-col gap-4\">\r\n            <Input\r\n              helperText=\"Your email cannot be changed\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              disabled\r\n            />\r\n            <Input\r\n              helperText=\"Enter new password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              placeholder=\"New password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              error={errors.password}\r\n            />\r\n            <Input\r\n              helperText=\"Confirm new password\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              error={errors.confirmPassword}\r\n            />\r\n            <Button type=\"submit\">Reset Password</Button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}